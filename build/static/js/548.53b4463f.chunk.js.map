{"version":3,"file":"static/js/548.53b4463f.chunk.js","mappings":"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","sources":["views/app-views/users/list/UserView.js","components/shared-components/AvatarStatus/index.js","views/app-views/users/list/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Avatar, Drawer, Divider } from 'antd';\nimport {\n  MobileOutlined,\n  MailOutlined,\n  UserOutlined,\n  CompassOutlined,\n  GlobalOutlined,\n  BankOutlined,\n  DingtalkOutlined,\n  FileProtectOutlined,\n} from '@ant-design/icons';\n\nexport class UserView extends Component {\n  render() {\n    const { data, visible, close } = this.props;\n    return (\n      <Drawer width={300} placement=\"right\" onClose={close} closable={false} open={visible}>\n        <div className=\"text-center mt-3\">\n          <Avatar size={80} src={null} />\n          <h3 className=\"mt-2 mb-0\">{data?.name}</h3>\n          <span className=\"text-muted\">{data?.username}</span>\n        </div>\n        <Divider dashed />\n        <div className=\"\">\n          <h6 className=\"text-muted text-uppercase mb-3\">Account details</h6>\n          <p>\n            <UserOutlined />\n            <span className=\"ml-3 text-dark\">id: {data?.id}</span>\n          </p>\n        </div>\n        <div className=\"mt-5\">\n          <h6 className=\"text-muted text-uppercase mb-3\">CONTACT</h6>\n          <p>\n            <MobileOutlined />\n            <span className=\"ml-3 text-dark\">{data?.phone}</span>\n          </p>\n          <p>\n            <MailOutlined />\n            <span className=\"ml-3 text-dark\">{data?.email ? data?.email : '-'}</span>\n          </p>\n          <p>\n            <CompassOutlined />\n            <span className=\"ml-3 text-dark\">{`${data?.address?.city}, ${data?.address?.street}`}</span>\n          </p>\n          <p>\n            <GlobalOutlined />\n            <span className=\"ml-3 text-dark\">{data?.website}</span>\n          </p>\n        </div>\n        <div className=\"mt-5\">\n          <h6 className=\"text-muted text-uppercase mb-3\">Company</h6>\n          <p>\n            <BankOutlined />\n            <a href=\"/#\" className=\"ml-3 text-dark\">\n              {data?.company?.name || '-'}\n            </a>\n          </p>\n          <p>\n            <DingtalkOutlined />\n            <a href=\"/#\" className=\"ml-3 text-dark\">\n              {data?.company?.catchPhrase || '-'}\n            </a>\n          </p>\n          <p>\n            <FileProtectOutlined />\n            <a href=\"/#\" className=\"ml-3 text-dark\">\n              {data?.company?.bs || '-'}\n            </a>\n          </p>\n        </div>\n      </Drawer>\n    );\n  }\n}\n\nexport default UserView;\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import { Card, Table, Tooltip, Button } from 'antd';\nimport { EyeOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport UserView from './UserView';\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { APP_PREFIX_PATH } from 'configs/AppConfig';\nimport Loading from 'components/shared-components/Loading';\n\nexport const UserList = () => {\n  const navigate = useNavigate();\n  const [state, setState] = useState({\n    users: [],\n    userProfileVisible: false,\n    selectedUser: null,\n  });\n  const [isLoading, setIsLoading] = useState(true);\n\n  const showUserProfile = (user) => {\n    setState((prev) => ({\n      ...prev,\n      userProfileVisible: true,\n      selectedUser: user,\n    }));\n  };\n\n  const closeUserProfile = () => {\n    setState((prev) => ({\n      ...prev,\n      userProfileVisible: false,\n      selectedUser: null,\n    }));\n  };\n\n  const editUserProfile = (user) => {\n    navigate(`${APP_PREFIX_PATH}/users/edit/${user.id}`);\n  };\n\n  const deleteUser = (id) => {\n    setState((prev) => ({\n      ...prev,\n      users: state.users.filter((user) => user.id !== id),\n    }));\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    (async () => {\n      const data = await fetch('https://jsonplaceholder.typicode.com/users').then((res) =>\n        res.json(),\n      );\n      setState((prev) => ({\n        ...prev,\n        users: data,\n      }));\n    })();\n    setIsLoading(false);\n  }, []);\n\n  const tableColumns = [\n    {\n      title: 'User',\n      dataIndex: 'name',\n      render: (_, record) => (\n        <div className=\"d-flex\">\n          <AvatarStatus src={record.img} name={record.name} subTitle={record.email} />\n        </div>\n      ),\n      sorter: {\n        compare: (a, b) => {\n          a = a.name.toLowerCase();\n          b = b.name.toLowerCase();\n          return a > b ? -1 : b > a ? 1 : 0;\n        },\n      },\n    },\n    {\n      title: 'Nickname',\n      dataIndex: 'nickname',\n      render: (_, record) => (\n        <div className=\"d-flex\">\n          <span>{record.username}</span>\n        </div>\n      ),\n      sorter: {\n        compare: (a, b) => {\n          a = a.username.toLowerCase();\n          b = b.username.toLowerCase();\n          return a > b ? -1 : b > a ? 1 : 0;\n        },\n      },\n    },\n    {\n      title: 'Phone',\n      dataIndex: 'phone',\n    },\n    {\n      title: '',\n      dataIndex: 'actions',\n      render: (_, elm) => (\n        <div className=\"text-right d-flex justify-content-end\">\n          <Tooltip title=\"Edit\">\n            <Button\n              type=\"default\"\n              className=\"mr-2\"\n              icon={<EditOutlined />}\n              onClick={() => {\n                editUserProfile(elm);\n              }}\n              size=\"small\"\n            />\n          </Tooltip>\n          <Tooltip title=\"View\">\n            <Button\n              type=\"primary\"\n              className=\"mr-2\"\n              icon={<EyeOutlined />}\n              onClick={() => {\n                showUserProfile(elm);\n              }}\n              size=\"small\"\n            />\n          </Tooltip>\n          <Tooltip title=\"Delete\">\n            <Button\n              danger\n              icon={<DeleteOutlined />}\n              onClick={() => {\n                deleteUser(elm.id);\n              }}\n              size=\"small\"\n            />\n          </Tooltip>\n        </div>\n      ),\n    },\n  ];\n\n  if (isLoading) return <Loading cover=\"content\" />;\n\n  return (\n    <Card bodyStyle={{ padding: '0px' }}>\n      <div className=\"table-responsive\">\n        <Table columns={tableColumns} dataSource={state.users} rowKey=\"id\" />\n      </div>\n      <UserView\n        data={state.selectedUser}\n        visible={state.userProfileVisible}\n        close={() => {\n          closeUserProfile();\n        }}\n      />\n    </Card>\n  );\n};\n\nexport default UserList;\n"],"names":["UserView","this","props","data","visible","close","width","placement","onClose","closable","open","className","size","src","name","username","dashed","UserOutlined","id","MobileOutlined","phone","MailOutlined","email","CompassOutlined","address","city","street","GlobalOutlined","website","BankOutlined","href","company","DingtalkOutlined","catchPhrase","FileProtectOutlined","bs","Component","renderAvatar","type","text","suffix","subTitle","icon","shape","gap","onNameClick","onClick","UserList","navigate","useNavigate","useState","users","userProfileVisible","selectedUser","state","setState","isLoading","setIsLoading","useEffect","fetch","then","res","json","prev","tableColumns","title","dataIndex","render","_","record","img","sorter","compare","a","b","toLowerCase","elm","EditOutlined","user","APP_PREFIX_PATH","EyeOutlined","danger","DeleteOutlined","filter","Loading","cover","bodyStyle","padding","columns","dataSource","rowKey"],"sourceRoot":""}