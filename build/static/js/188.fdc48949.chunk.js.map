{"version":3,"file":"static/js/188.fdc48949.chunk.js","mappings":"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","sources":["components/shared-components/Flex/index.js","views/app-views/users/edit/index.js"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nconst Flex = styled.div(({justifyContent, alignItems, flexDirection, gap, padding, margin}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: justifyContent,\r\n\t\talignItems: alignItems,\r\n\t\tgap: typeof gap === 'number' ? `${gap}px` : gap,\r\n\t}\r\n\r\n\tif (flexDirection) {\r\n\t\tbaseStyle.flexDirection = flexDirection\r\n\t}\r\n\r\n\tif (padding) {\r\n\t\tbaseStyle.padding = padding\r\n\t}\r\n\r\n\tif (margin) {\r\n\t\tbaseStyle.margin = margin\r\n\t}\r\n\r\n\treturn {...baseStyle}\r\n})\r\n\r\nexport default Flex\r\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Form, Avatar, Button, Input, Row, Col, message, Upload } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport { ROW_GUTTER } from 'constants/ThemeConstant';\nimport Flex from 'components/shared-components/Flex';\nimport Loading from 'components/shared-components/Loading';\n\nconst Edit = () => {\n  const params = useParams();\n  const [user, setUser] = useState({\n    id: null,\n    name: '',\n    username: '',\n    email: '',\n    address: {\n      street: '',\n      suite: '',\n      city: '',\n      zipcode: '',\n      geo: {\n        lat: '',\n        lng: '',\n      },\n    },\n    phone: '',\n    website: '',\n    company: {\n      name: '',\n      catchPhrase: '',\n      bs: '',\n    },\n  });\n  const [avatar, setAvatar] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const onFinish = (values) => {\n    const key = 'updatable';\n    message.loading({ content: 'Updating...', key });\n    setTimeout(() => {\n      setUser({\n        name: values.name,\n        email: values.email,\n        username: values.userName,\n        phone: values.phoneNumber,\n        website: values.website,\n        address: {\n          ...user.address,\n          street: values.address,\n          city: values.city,\n        },\n        zipcode: values.zipcode,\n      });\n      message.success({ content: 'Done!', key, duration: 2 });\n    }, 1000);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const onUploadAavater = (info) => {\n    setAvatar(URL.createObjectURL(info.file.originFileObj));\n  };\n\n  const onRemoveAvater = () => {\n    setAvatar(null);\n  };\n\n  useEffect(() => {\n    console.log(user);\n  }, [user]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    (async () => {\n      const data = await fetch(`https://jsonplaceholder.typicode.com/users/${params.id}`).then(\n        (res) => res.json(),\n      );\n      setUser(data);\n      setIsLoading(false);\n    })();\n  }, [params.id]);\n\n  if (isLoading) return <Loading cover=\"content\" />;\n\n  return (\n    <>\n      <Flex alignItems=\"center\" mobileFlex={false} className=\"text-center text-md-left\">\n        <Avatar size={90} src={avatar} icon={<UserOutlined />} />\n        <div className=\"ml-3 mt-md-0 mt-3\">\n          <Upload onChange={onUploadAavater} showUploadList={false}>\n            <Button type=\"primary\">Change Avatar</Button>\n          </Upload>\n          <Button className=\"ml-2\" onClick={onRemoveAvater}>\n            Remove\n          </Button>\n        </div>\n      </Flex>\n      <div className=\"mt-4\">\n        <Form\n          name=\"basicInformation\"\n          layout=\"vertical\"\n          initialValues={{\n            name: user?.name,\n            email: user?.email,\n            username: user?.username,\n            phone: user?.phone,\n            website: user?.website,\n            address: user?.address?.street,\n            city: user?.address?.city,\n            zipcode: user?.address?.zipcode,\n          }}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n        >\n          <Row>\n            <Col xs={24} sm={24} md={24} lg={16}>\n              <Row gutter={ROW_GUTTER}>\n                <Col xs={24} sm={24} md={12}>\n                  <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please input your name!',\n                      },\n                    ]}\n                  >\n                    <Input />\n                  </Form.Item>\n                </Col>\n                <Col xs={24} sm={24} md={12}>\n                  <Form.Item\n                    label=\"Username\"\n                    name=\"username\"\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please input your username!',\n                      },\n                    ]}\n                  >\n                    <Input />\n                  </Form.Item>\n                </Col>\n                <Col xs={24} sm={24} md={12}>\n                  <Form.Item\n                    label=\"Email\"\n                    name=\"email\"\n                    rules={[\n                      {\n                        required: true,\n                        type: 'email',\n                        message: 'Please enter a valid email!',\n                      },\n                    ]}\n                  >\n                    <Input />\n                  </Form.Item>\n                </Col>\n                <Col xs={24} sm={24} md={12}>\n                  <Form.Item label=\"Phone Number\" name=\"phone\">\n                    <Input />\n                  </Form.Item>\n                </Col>\n                <Col xs={24} sm={24} md={12}>\n                  <Form.Item label=\"Website\" name=\"website\">\n                    <Input />\n                  </Form.Item>\n                </Col>\n                <Col xs={24} sm={24} md={24}>\n                  <Form.Item label=\"Address\" name=\"address\">\n                    <Input />\n                  </Form.Item>\n                </Col>\n                <Col xs={24} sm={24} md={12}>\n                  <Form.Item label=\"City\" name=\"city\">\n                    <Input />\n                  </Form.Item>\n                </Col>\n                <Col xs={24} sm={24} md={12}>\n                  <Form.Item label=\"Zip code\" name=\"zipcode\">\n                    <Input />\n                  </Form.Item>\n                </Col>\n              </Row>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Save Change\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    </>\n  );\n};\n\nexport default Edit;\n"],"names":["Flex","styled","justifyContent","alignItems","flexDirection","gap","padding","margin","baseStyle","display","params","useParams","useState","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","user","setUser","avatar","setAvatar","isLoading","setIsLoading","useEffect","console","log","fetch","then","res","json","data","cover","mobileFlex","className","size","src","icon","onChange","info","URL","createObjectURL","file","originFileObj","showUploadList","type","onClick","layout","initialValues","onFinish","values","key","message","content","setTimeout","userName","phoneNumber","duration","onFinishFailed","errorInfo","xs","sm","md","lg","gutter","ROW_GUTTER","label","rules","required","htmlType"],"sourceRoot":""}